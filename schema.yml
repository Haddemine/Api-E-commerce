openapi: 3.0.3
info:
  title: Blog API Project
  version: 1.0.0
  description: A sample blog to learn about DRF
paths:
  /api/dj-rest-auth/login/:
    post:
      operationId: api_dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/dj-rest-auth/logout/:
    post:
      operationId: api_dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/change/:
    post:
      operationId: api_dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/reset/:
    post:
      operationId: api_dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: api_dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/registration/:
    post:
      operationId: api_dj_rest_auth_registration_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/dj-rest-auth/registration/resend-email/:
    post:
      operationId: api_dj_rest_auth_registration_resend_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/registration/verify-email/:
    post:
      operationId: api_dj_rest_auth_registration_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/dj-rest-auth/user/:
    get:
      operationId: api_dj_rest_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: api_dj_rest_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: api_dj_rest_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /apis/categorie:
    get:
      operationId: apis_categorie_list
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorieSerializers'
          description: ''
    post:
      operationId: apis_categorie_create
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieSerializers'
          description: ''
  /apis/categorie/{id}/:
    get:
      operationId: apis_categorie_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieSerializers'
          description: ''
    put:
      operationId: apis_categorie_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorieSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieSerializers'
          description: ''
    patch:
      operationId: apis_categorie_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategorieSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategorieSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategorieSerializers'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieSerializers'
          description: ''
    delete:
      operationId: apis_categorie_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /apis/client:
    get:
      operationId: apis_client_list
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientSerializers'
          description: ''
    post:
      operationId: apis_client_create
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSerializers'
          description: ''
  /apis/client/{id}/:
    get:
      operationId: apis_client_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSerializers'
          description: ''
    put:
      operationId: apis_client_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSerializers'
          description: ''
    patch:
      operationId: apis_client_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientSerializers'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSerializers'
          description: ''
    delete:
      operationId: apis_client_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /apis/fournisseur:
    get:
      operationId: apis_fournisseur_list
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FournisseurSerializers'
          description: ''
    post:
      operationId: apis_fournisseur_create
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FournisseurSerializers'
          description: ''
  /apis/fournisseur/{id}/:
    get:
      operationId: apis_fournisseur_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FournisseurSerializers'
          description: ''
    put:
      operationId: apis_fournisseur_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FournisseurSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FournisseurSerializers'
          description: ''
    patch:
      operationId: apis_fournisseur_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFournisseurSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFournisseurSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFournisseurSerializers'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FournisseurSerializers'
          description: ''
    delete:
      operationId: apis_fournisseur_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /apis/marque:
    get:
      operationId: apis_marque_list
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarqueSerializers'
          description: ''
    post:
      operationId: apis_marque_create
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarqueSerializers'
          description: ''
  /apis/marque/{id}/:
    get:
      operationId: apis_marque_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarqueSerializers'
          description: ''
    put:
      operationId: apis_marque_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MarqueSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarqueSerializers'
          description: ''
    patch:
      operationId: apis_marque_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMarqueSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMarqueSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMarqueSerializers'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarqueSerializers'
          description: ''
    delete:
      operationId: apis_marque_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /apis/produit:
    get:
      operationId: apis_produit_list
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProduitSerializers'
          description: ''
    post:
      operationId: apis_produit_create
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitSerializers'
          description: ''
  /apis/produit/{id}/:
    get:
      operationId: apis_produit_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitSerializers'
          description: ''
    put:
      operationId: apis_produit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProduitSerializers'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitSerializers'
          description: ''
    patch:
      operationId: apis_produit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduitSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduitSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduitSerializers'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduitSerializers'
          description: ''
    delete:
      operationId: apis_produit_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - apis
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CategorieSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
      required:
      - id
      - nom
    ClientSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
        nni:
          type: integer
        telephone:
          type: integer
        email:
          type: string
          maxLength: 200
        adresse:
          type: string
          maxLength: 50
      required:
      - adresse
      - email
      - id
      - nni
      - nom
      - telephone
    FournisseurSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
        nni:
          type: integer
        telephone:
          type: integer
        email:
          type: string
          maxLength: 200
        adresse:
          type: string
          maxLength: 50
      required:
      - adresse
      - email
      - id
      - nni
      - nom
      - telephone
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    MarqueSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
      required:
      - id
      - nom
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedCategorieSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
    PatchedClientSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
        nni:
          type: integer
        telephone:
          type: integer
        email:
          type: string
          maxLength: 200
        adresse:
          type: string
          maxLength: 50
    PatchedFournisseurSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
        nni:
          type: integer
        telephone:
          type: integer
        email:
          type: string
          maxLength: 200
        adresse:
          type: string
          maxLength: 50
    PatchedMarqueSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nom:
          type: string
          maxLength: 100
    PatchedProduitSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        available:
          type: boolean
        nom:
          type: string
          maxLength: 200
        prix:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        description:
          type: string
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
        fournisseurs:
          type: integer
        marqueprives:
          type: integer
        categories:
          type: integer
          nullable: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Adresse électronique
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
    ProduitSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        available:
          type: boolean
        nom:
          type: string
          maxLength: 200
        prix:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,7})?$
        description:
          type: string
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
        fournisseurs:
          type: integer
        marqueprives:
          type: integer
        categories:
          type: integer
          nullable: true
      required:
      - description
      - fournisseurs
      - id
      - marqueprives
      - nom
      - prix
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          title: Clé
          maxLength: 40
      required:
      - key
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Adresse électronique
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - email
      - pk
      - username
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
